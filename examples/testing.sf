
def rec fib : Nat -> Nat {
  \n => case n {
    z => z,
    s n' => case n' {
      z => s z,
      s n'' => add (fib n') (fib n'')
    }
  }
}

def ten : Nat {
  s (s (s (s (s (s (s (s (s (s z)))))))))
}

def main : IO Unit {
  debug-print (fib (mul ten (s (s z))))
}
